{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oldToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_newToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "missing",
          "type": "uint256"
        }
      ],
      "name": "NotEnoughNewTokens",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Swapped",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "newToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oldToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sendTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060405161093938038061093983398101604081905261002f916100d8565b6100383361006c565b600180546001600160a01b039283166001600160a01b0319918216179091556002805493909216921691909117905561010b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100d357600080fd5b919050565b600080604083850312156100eb57600080fd5b6100f4836100bc565b9150610102602084016100bc565b90509250929050565b61081f8061011a6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b31c710a1161005b578063b31c710a146100c8578063c42bd05a146100db578063e6d66ac8146100ee578063f2fde38b1461010157600080fd5b8063715018a6146100825780638da5cb5b1461008c57806394b918de146100b5575b600080fd5b61008a610114565b005b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61008a6100c3366004610681565b610128565b600254610099906001600160a01b031681565b600154610099906001600160a01b031681565b61008a6100fc3660046106b6565b610236565b61008a61010f3660046106f2565b610259565b61011c6102d2565b610126600061032c565b565b600254610140906001600160a01b031633308461037c565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610189573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ad9190610714565b9050818110156101e6576101c1818361072d565b60405163b3febd4b60e01b81526004016101dd91815260200190565b60405180910390fd5b6001546101fd906001600160a01b031633846103e7565b60405182815233907fcdee897399ab5e465acb1bd3ed5e32c695f196321764546c59720fa6c9ce4c699060200160405180910390a25050565b61023e6102d2565b826102536001600160a01b03821684846103e7565b50505050565b6102616102d2565b6001600160a01b0381166102c65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101dd565b6102cf8161032c565b50565b6000546001600160a01b031633146101265760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526102539085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261041c565b6040516001600160a01b03831660248201526044810182905261041790849063a9059cbb60e01b906064016103b0565b505050565b6000610471826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104f19092919063ffffffff16565b90508051600014806104925750808060200190518101906104929190610754565b6104175760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101dd565b60606105008484600085610508565b949350505050565b6060824710156105695760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101dd565b600080866001600160a01b03168587604051610585919061079a565b60006040518083038185875af1925050503d80600081146105c2576040519150601f19603f3d011682016040523d82523d6000602084013e6105c7565b606091505b50915091506105d8878383876105e3565b979650505050505050565b6060831561065257825160000361064b576001600160a01b0385163b61064b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101dd565b5081610500565b61050083838151156106675781518083602001fd5b8060405162461bcd60e51b81526004016101dd91906107b6565b60006020828403121561069357600080fd5b5035919050565b80356001600160a01b03811681146106b157600080fd5b919050565b6000806000606084860312156106cb57600080fd5b6106d48461069a565b92506106e26020850161069a565b9150604084013590509250925092565b60006020828403121561070457600080fd5b61070d8261069a565b9392505050565b60006020828403121561072657600080fd5b5051919050565b8181038181111561074e57634e487b7160e01b600052601160045260246000fd5b92915050565b60006020828403121561076657600080fd5b8151801515811461070d57600080fd5b60005b83811015610791578181015183820152602001610779565b50506000910152565b600082516107ac818460208701610776565b9190910192915050565b60208152600082518060208401526107d5816040850160208701610776565b601f01601f1916919091016040019291505056fea2646970667358221220b4177d664687a0a90726952f95308c099dea6cd86a5784ee79a018dbda96effe64736f6c63430008130033",
    "sourceMap": "203:903:0:-:0;;;436:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:20;719:10:27;936:18:20;:32::i;:::-;496:8:0;:28;;-1:-1:-1;;;;;496:28:0;;;-1:-1:-1;;;;;;496:28:0;;;;;;;534:8;:28;;;;;;;;;;;;;;203:903;;2426:187:20;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:20;;;-1:-1:-1;;;;;;2534:17:20;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:177:29:-;93:13;;-1:-1:-1;;;;;135:31:29;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;203:903:0;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b31c710a1161005b578063b31c710a146100c8578063c42bd05a146100db578063e6d66ac8146100ee578063f2fde38b1461010157600080fd5b8063715018a6146100825780638da5cb5b1461008c57806394b918de146100b5575b600080fd5b61008a610114565b005b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61008a6100c3366004610681565b610128565b600254610099906001600160a01b031681565b600154610099906001600160a01b031681565b61008a6100fc3660046106b6565b610236565b61008a61010f3660046106f2565b610259565b61011c6102d2565b610126600061032c565b565b600254610140906001600160a01b031633308461037c565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610189573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ad9190610714565b9050818110156101e6576101c1818361072d565b60405163b3febd4b60e01b81526004016101dd91815260200190565b60405180910390fd5b6001546101fd906001600160a01b031633846103e7565b60405182815233907fcdee897399ab5e465acb1bd3ed5e32c695f196321764546c59720fa6c9ce4c699060200160405180910390a25050565b61023e6102d2565b826102536001600160a01b03821684846103e7565b50505050565b6102616102d2565b6001600160a01b0381166102c65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101dd565b6102cf8161032c565b50565b6000546001600160a01b031633146101265760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526102539085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261041c565b6040516001600160a01b03831660248201526044810182905261041790849063a9059cbb60e01b906064016103b0565b505050565b6000610471826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104f19092919063ffffffff16565b90508051600014806104925750808060200190518101906104929190610754565b6104175760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101dd565b60606105008484600085610508565b949350505050565b6060824710156105695760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101dd565b600080866001600160a01b03168587604051610585919061079a565b60006040518083038185875af1925050503d80600081146105c2576040519150601f19603f3d011682016040523d82523d6000602084013e6105c7565b606091505b50915091506105d8878383876105e3565b979650505050505050565b6060831561065257825160000361064b576001600160a01b0385163b61064b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101dd565b5081610500565b61050083838151156106675781518083602001fd5b8060405162461bcd60e51b81526004016101dd91906107b6565b60006020828403121561069357600080fd5b5035919050565b80356001600160a01b03811681146106b157600080fd5b919050565b6000806000606084860312156106cb57600080fd5b6106d48461069a565b92506106e26020850161069a565b9150604084013590509250925092565b60006020828403121561070457600080fd5b61070d8261069a565b9392505050565b60006020828403121561072657600080fd5b5051919050565b8181038181111561074e57634e487b7160e01b600052601160045260246000fd5b92915050565b60006020828403121561076657600080fd5b8151801515811461070d57600080fd5b60005b83811015610791578181015183820152602001610779565b50506000910152565b600082516107ac818460208701610776565b9190910192915050565b60208152600082518060208401526107d5816040850160208701610776565b601f01601f1916919091016040019291505056fea2646970667358221220b4177d664687a0a90726952f95308c099dea6cd86a5784ee79a018dbda96effe64736f6c63430008130033",
    "sourceMap": "203:903:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1824:101:20;;;:::i;:::-;;1201:85;1247:7;1273:6;-1:-1:-1;;;;;1273:6:20;1201:85;;;-1:-1:-1;;;;;178:32:29;;;160:51;;148:2;133:18;1201:85:20;;;;;;;575:346:0;;;;;;:::i;:::-;;:::i;303:22::-;;;;;-1:-1:-1;;;;;303:22:0;;;275;;;;;-1:-1:-1;;;;;275:22:0;;;927:177;;;;;;:::i;:::-;;:::i;2074:198:20:-;;;;;;:::i;:::-;;:::i;1824:101::-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;575:346:0:-;624:8;;:60;;-1:-1:-1;;;;;624:8:0;650:10;670:4;677:6;624:25;:60::i;:::-;712:8;;:33;;-1:-1:-1;;;712:33:0;;739:4;712:33;;;160:51:29;694:15:0;;-1:-1:-1;;;;;712:8:0;;:18;;133::29;;712:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;694:51;;769:6;759:7;:16;755:65;;;803:16;812:7;803:6;:16;:::i;:::-;784:36;;-1:-1:-1;;;784:36:0;;;;;;1898:25:29;;1886:2;1871:18;;1752:177;784:36:0;;;;;;;;755:65;830:8;;:41;;-1:-1:-1;;;;;830:8:0;852:10;864:6;830:21;:41::i;:::-;887:27;;1898:25:29;;;895:10:0;;887:27;;1886:2:29;1871:18;887:27:0;;;;;;;614:307;575:346;:::o;927:177::-;1094:13:20;:11;:13::i;:::-;1046:5:0;1062:35:::1;-1:-1:-1::0;;;;;1062:23:0;::::1;1086:2:::0;1090:6;1062:23:::1;:35::i;:::-;1009:95;927:177:::0;;;:::o;2074:198:20:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:20;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:20;;2136:2:29;2154:73:20::1;::::0;::::1;2118:21:29::0;2175:2;2155:18;;;2148:30;2214:34;2194:18;;;2187:62;-1:-1:-1;;;2265:18:29;;;2258:36;2311:19;;2154:73:20::1;1934:402:29::0;2154:73:20::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:20;719:10:27;1422:23:20;1414:68;;;;-1:-1:-1;;;1414:68:20;;2543:2:29;1414:68:20;;;2525:21:29;;;2562:18;;;2555:30;2621:34;2601:18;;;2594:62;2673:18;;1414:68:20;2341:356:29;2426:187:20;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:20;;;-1:-1:-1;;;;;;2534:17:20;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;1355:203:25:-;1482:68;;-1:-1:-1;;;;;2960:15:29;;;1482:68:25;;;2942:34:29;3012:15;;2992:18;;;2985:43;3044:18;;;3037:34;;;1455:96:25;;1475:5;;-1:-1:-1;;;1505:27:25;2877:18:29;;1482:68:25;;;;-1:-1:-1;;1482:68:25;;;;;;;;;;;;;;-1:-1:-1;;;;;1482:68:25;-1:-1:-1;;;;;;1482:68:25;;;;;;;;;;1455:19;:96::i;941:175::-;1050:58;;-1:-1:-1;;;;;3274:32:29;;1050:58:25;;;3256:51:29;3323:18;;;3316:34;;;1023:86:25;;1043:5;;-1:-1:-1;;;1073:23:25;3229:18:29;;1050:58:25;3082:274:29;1023:86:25;941:175;;;:::o;5196:642::-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:25;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:25;;3845:2:29;5720:111:25;;;3827:21:29;3884:2;3864:18;;;3857:30;3923:34;3903:18;;;3896:62;-1:-1:-1;;;3974:18:29;;;3967:40;4024:19;;5720:111:25;3643:406:29;4108:223:26;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;4108:223;-1:-1:-1;;;;4108:223:26:o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:26;;4256:2:29;5354:81:26;;;4238:21:29;4295:2;4275:18;;;4268:30;4334:34;4314:18;;;4307:62;-1:-1:-1;;;4385:18:29;;;4378:36;4431:19;;5354:81:26;4054:402:29;5354:81:26;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:26;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:26:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:26;;;8113:60;;;;-1:-1:-1;;;8113:60:26;;5210:2:29;8113:60:26;;;5192:21:29;5249:2;5229:18;;;5222:30;5288:31;5268:18;;;5261:59;5337:18;;8113:60:26;5008:353:29;8113:60:26;-1:-1:-1;8208:10:26;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:26;;;;;;;;:::i;222:180:29:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;-1:-1:-1;373:23:29;;222:180;-1:-1:-1;222:180:29:o;631:173::-;699:20;;-1:-1:-1;;;;;748:31:29;;738:42;;728:70;;794:1;791;784:12;728:70;631:173;;;:::o;809:328::-;886:6;894;902;955:2;943:9;934:7;930:23;926:32;923:52;;;971:1;968;961:12;923:52;994:29;1013:9;994:29;:::i;:::-;984:39;;1042:38;1076:2;1065:9;1061:18;1042:38;:::i;:::-;1032:48;;1127:2;1116:9;1112:18;1099:32;1089:42;;809:328;;;;;:::o;1142:186::-;1201:6;1254:2;1242:9;1233:7;1229:23;1225:32;1222:52;;;1270:1;1267;1260:12;1222:52;1293:29;1312:9;1293:29;:::i;:::-;1283:39;1142:186;-1:-1:-1;;;1142:186:29:o;1333:184::-;1403:6;1456:2;1444:9;1435:7;1431:23;1427:32;1424:52;;;1472:1;1469;1462:12;1424:52;-1:-1:-1;1495:16:29;;1333:184;-1:-1:-1;1333:184:29:o;1522:225::-;1589:9;;;1610:11;;;1607:134;;;1663:10;1658:3;1654:20;1651:1;1644:31;1698:4;1695:1;1688:15;1726:4;1723:1;1716:15;1607:134;1522:225;;;;:::o;3361:277::-;3428:6;3481:2;3469:9;3460:7;3456:23;3452:32;3449:52;;;3497:1;3494;3487:12;3449:52;3529:9;3523:16;3582:5;3575:13;3568:21;3561:5;3558:32;3548:60;;3604:1;3601;3594:12;4461:250;4546:1;4556:113;4570:6;4567:1;4564:13;4556:113;;;4646:11;;;4640:18;4627:11;;;4620:39;4592:2;4585:10;4556:113;;;-1:-1:-1;;4703:1:29;4685:16;;4678:27;4461:250::o;4716:287::-;4845:3;4883:6;4877:13;4899:66;4958:6;4953:3;4946:4;4938:6;4934:17;4899:66;:::i;:::-;4981:16;;;;;4716:287;-1:-1:-1;;4716:287:29:o;5366:396::-;5515:2;5504:9;5497:21;5478:4;5547:6;5541:13;5590:6;5585:2;5574:9;5570:18;5563:34;5606:79;5678:6;5673:2;5662:9;5658:18;5653:2;5645:6;5641:15;5606:79;:::i;:::-;5746:2;5725:15;-1:-1:-1;;5721:29:29;5706:45;;;;5753:2;5702:54;;5366:396;-1:-1:-1;;5366:396:29:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "newToken()": "c42bd05a",
    "oldToken()": "b31c710a",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "sendTokens(address,address,uint256)": "e6d66ac8",
    "swap(uint256)": "94b918de",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oldToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"missing\",\"type\":\"uint256\"}],\"name\":\"NotEnoughNewTokens\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"newToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oldToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Oip6Migration.sol\":\"Oip6Migration\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/Oip6Migration.sol\":{\"keccak256\":\"0x3a16c021f4edcdb27dbbcc13a276b9b2795ecfb26a7da6802dd80cb3fba7c65b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8468ac5b275aa0f1347d392185f02ba7530d8c917327f06b265160f7cfb127aa\",\"dweb:/ipfs/QmYNGmKmNiQpFCtAHniWgQRxA4THEZXz3AELPZgcYF6UVJ\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_oldToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_newToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "missing",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "NotEnoughNewTokens"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Swapped",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "newToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oldToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sendTokens"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swap"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Oip6Migration.sol": "Oip6Migration"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Oip6Migration.sol": {
        "keccak256": "0x3a16c021f4edcdb27dbbcc13a276b9b2795ecfb26a7da6802dd80cb3fba7c65b",
        "urls": [
          "bzz-raw://8468ac5b275aa0f1347d392185f02ba7530d8c917327f06b265160f7cfb127aa",
          "dweb:/ipfs/QmYNGmKmNiQpFCtAHniWgQRxA4THEZXz3AELPZgcYF6UVJ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Oip6Migration.sol",
    "id": 127,
    "exportedSymbols": {
      "Context": [45067],
      "IERC20": [44278],
      "Oip6Migration": [126],
      "Ownable": [43613],
      "SafeERC20": [44715]
    },
    "nodeType": "SourceUnit",
    "src": "33:1074:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "33:23:0",
        "nodes": [],
        "literals": ["solidity", "0.8", ".19"]
      },
      {
        "id": 4,
        "nodeType": "ImportDirective",
        "src": "58:90:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 127,
        "sourceUnit": 44716,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44278,
              "src": "66:6:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44715,
              "src": "74:9:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "149:52:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 127,
        "sourceUnit": 43614,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 126,
        "nodeType": "ContractDefinition",
        "src": "203:903:0",
        "nodes": [
          {
            "id": 11,
            "nodeType": "UsingForDirective",
            "src": "243:27:0",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 8,
              "name": "SafeERC20",
              "nameLocations": ["249:9:0"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44715,
              "src": "249:9:0"
            },
            "typeName": {
              "id": 10,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9,
                "name": "IERC20",
                "nameLocations": ["263:6:0"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44278,
                "src": "263:6:0"
              },
              "referencedDeclaration": 44278,
              "src": "263:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$44278",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 14,
            "nodeType": "VariableDeclaration",
            "src": "275:22:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "c42bd05a",
            "mutability": "mutable",
            "name": "newToken",
            "nameLocation": "289:8:0",
            "scope": 126,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$44278",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 13,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12,
                "name": "IERC20",
                "nameLocations": ["275:6:0"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44278,
                "src": "275:6:0"
              },
              "referencedDeclaration": 44278,
              "src": "275:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$44278",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 17,
            "nodeType": "VariableDeclaration",
            "src": "303:22:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "b31c710a",
            "mutability": "mutable",
            "name": "oldToken",
            "nameLocation": "317:8:0",
            "scope": 126,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$44278",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 16,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15,
                "name": "IERC20",
                "nameLocations": ["303:6:0"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44278,
                "src": "303:6:0"
              },
              "referencedDeclaration": 44278,
              "src": "303:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$44278",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 21,
            "nodeType": "ErrorDefinition",
            "src": "331:42:0",
            "nodes": [],
            "errorSelector": "b3febd4b",
            "name": "NotEnoughNewTokens",
            "nameLocation": "337:18:0",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "missing",
                  "nameLocation": "364:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "356:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "356:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "355:17:0"
            }
          },
          {
            "id": 27,
            "nodeType": "EventDefinition",
            "src": "378:52:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "cdee897399ab5e465acb1bd3ed5e32c695f196321764546c59720fa6c9ce4c69",
            "name": "Swapped",
            "nameLocation": "384:7:0",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "408:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "392:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "392:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "422:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "414:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "414:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "391:38:0"
            }
          },
          {
            "id": 47,
            "nodeType": "FunctionDefinition",
            "src": "436:133:0",
            "nodes": [],
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "486:83:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34,
                      "name": "newToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "496:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$44278",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 36,
                          "name": "_newToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "514:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 35,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44278,
                        "src": "507:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$44278_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "507:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$44278",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "496:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$44278",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "496:28:0"
                },
                {
                  "expression": {
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40,
                      "name": "oldToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "534:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$44278",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 42,
                          "name": "_oldToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "552:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 41,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44278,
                        "src": "545:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$44278_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "545:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$44278",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "534:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$44278",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "534:28:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "mutability": "mutable",
                  "name": "_oldToken",
                  "nameLocation": "456:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "448:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "_newToken",
                  "nameLocation": "475:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "467:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "467:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "447:38:0"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "486:0:0"
            },
            "scope": 126,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99,
            "nodeType": "FunctionDefinition",
            "src": "575:346:0",
            "nodes": [],
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "614:307:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "650:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "654:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "650:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 59,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "670:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Oip6Migration_$126",
                              "typeString": "contract Oip6Migration"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Oip6Migration_$126",
                              "typeString": "contract Oip6Migration"
                            }
                          ],
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "662:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 57,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "662:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "662:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "677:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 52,
                        "name": "oldToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "624:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44278",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 54,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "633:16:0",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44399,
                      "src": "624:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$44278_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$44278_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "624:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "624:60:0"
                },
                {
                  "assignments": [65],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "702:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 98,
                      "src": "694:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "694:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 70,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "739:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Oip6Migration_$126",
                              "typeString": "contract Oip6Migration"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Oip6Migration_$126",
                              "typeString": "contract Oip6Migration"
                            }
                          ],
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "731:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 68,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "731:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "731:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 66,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "712:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44278",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "721:9:0",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44235,
                      "src": "712:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "712:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "694:51:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 74,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "759:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 75,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "769:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "759:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 83,
                  "nodeType": "IfStatement",
                  "src": "755:65:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 78,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "803:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 79,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "812:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "803:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 77,
                        "name": "NotEnoughNewTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "784:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) pure"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "784:36:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 82,
                    "nodeType": "RevertStatement",
                    "src": "777:43:0"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "852:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "856:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "852:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "864:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 84,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "830:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44278",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "839:12:0",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44372,
                      "src": "830:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$44278_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$44278_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "830:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "830:41:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 93,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "895:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "899:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "895:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 95,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "907:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 92,
                      "name": "Swapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "887:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "887:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "EmitStatement",
                  "src": "882:32:0"
                }
              ]
            },
            "functionSelector": "94b918de",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nameLocation": "584:4:0",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "597:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "589:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "588:16:0"
            },
            "returnParameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "614:0:0"
            },
            "scope": 126,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 125,
            "nodeType": "FunctionDefinition",
            "src": "927:177:0",
            "nodes": [],
            "body": {
              "id": 124,
              "nodeType": "Block",
              "src": "1009:95:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [112],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 112,
                      "mutability": "mutable",
                      "name": "erc20Token",
                      "nameLocation": "1026:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 124,
                      "src": "1019:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$44278",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 111,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 110,
                          "name": "IERC20",
                          "nameLocations": ["1019:6:0"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44278,
                          "src": "1019:6:0"
                        },
                        "referencedDeclaration": 44278,
                        "src": "1019:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44278",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 116,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 114,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101,
                        "src": "1046:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 113,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44278,
                      "src": "1039:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$44278_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1039:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$44278",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1019:33:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 120,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "1086:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 121,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "1090:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 117,
                        "name": "erc20Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "1062:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44278",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1073:12:0",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44372,
                      "src": "1062:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$44278_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$44278_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1062:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "1062:35:0"
                }
              ]
            },
            "functionSelector": "e6d66ac8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 108,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 107,
                  "name": "onlyOwner",
                  "nameLocations": ["999:9:0"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43532,
                  "src": "999:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "999:9:0"
              }
            ],
            "name": "sendTokens",
            "nameLocation": "936:10:0",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "955:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "947:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "970:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "962:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "982:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "974:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "974:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "946:43:0"
            },
            "returnParameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1009:0:0"
            },
            "scope": 126,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "Ownable",
              "nameLocations": ["229:7:0"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43613,
              "src": "229:7:0"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "229:7:0"
          }
        ],
        "canonicalName": "Oip6Migration",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [126, 43613, 45067],
        "name": "Oip6Migration",
        "nameLocation": "212:13:0",
        "scope": 127,
        "usedErrors": [21]
      }
    ],
    "license": "MIT"
  },
  "id": 0
}
